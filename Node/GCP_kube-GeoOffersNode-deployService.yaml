apiVersion: v1
kind: ConfigMap
metadata:
  name: env-config
  namespace: default
data:
 log.level: INFO
 log.location: LOCAL
 LANGUAGE: English
 port: "8080"
 host: "10.35.247.64"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"creationTimestamp":null,"generation":1,"labels":{"run":"kube-gopal-deploy"},"name":"kube-gopal-deploy","namespace":"default","selfLink":"/apis/extensions/v1beta1/namespaces/default/deployments/kube-gopal-deploy"},"spec":{"progressDeadlineSeconds":600,"replicas":4,"revisionHistoryLimit":10,"selector":{"matchLabels":{"run":"kube-gopal-deploy"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"run":"kube-gopal-deploy"}},"spec":{"containers":[{"image":"docker.io/grangaswamy/gopals_hw","imagePullPolicy":"Always","name":"kube-gopal-deploy","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{}}
  creationTimestamp: null
  generation: 1
  labels:
    run: kube-geooffers-deploy
  name: kube-geooffers-deploy
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/kube-geooffers-deploy
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: kube-geooffers-deploy
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: kube-geooffers-deploy
    spec:
      containers:
      - image: docker.io/grangaswamy/geo_offers
        imagePullPolicy: Always
        name: kube-geooffers-deploy
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
         - name: LOG_LEVEL
           valueFrom:
            configMapKeyRef:
             name: env-config
             key: log.level
         - name: LOG_LOCATION
           valueFrom:
            configMapKeyRef:
             name: env-config
             key: log.location
         - name: LANGUAGE
           valueFrom:
            configMapKeyRef:
             name: env-config
             key: LANGUAGE
         - name: CONNSTR
           valueFrom:
            secretKeyRef:
             name: connstr
             key: CONNSTR
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: kube-geooffers-deploy
  name: my-go-service
  selfLink: /api/v1/namespaces/default/services/my-hw-service
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 31831
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: kube-geooffers-deploy
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
